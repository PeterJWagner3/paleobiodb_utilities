library(devtools)
library(roxygen2)
document()
document()
?subsampleEvenness
document()
library(veolociraptr)
?subsampleEvenness
# Download a test dataset of pleistocene bivalves.
DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Pleistocene",StopInterval="Pleistocene")
# Create a community matrix of genera by plates.
CommunityMatrix<-abundancematrix(DataPBDB,Rows="geoplate",Columns="genus")
# Cull out depauperate samples and rare taxa
CommunityCull<-cullMatrix(CommunityMatrix,5,50)
# Calculate the standardized richness of each plate at a quota of 0.5.
StandardizedRichness<-apply(CommunityCull,1,subsampleEvenness,0.5)
?subsampleEvenness
# Download a test dataset of pleistocene bivalves.
DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Pleistocene",StopInterval="Pleistocene")
# Create a community matrix of genera by plates.
CommunityMatrix<-abundanceMatrix(DataPBDB,Rows="geoplate",Columns="genus")
# Cull out depauperate samples and rare taxa
CommunityCull<-cullMatrix(CommunityMatrix,5,50)
# Calculate the standardized richness of each plate at a quota of 0.5.
StandardizedRichness<-apply(CommunityCull,1,subsampleEvenness,0.5)
library(veolociraptr)
# Download a test dataset of pleistocene bivalves.
DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Pleistocene",StopInterval="Pleistocene")
# Create a community matrix of genera by plates.
CommunityMatrix<-abundanceMatrix(DataPBDB,Rows="geoplate",Columns="genus")
# Cull out depauperate samples and rare taxa
CommunityCull<-cullMatrix(CommunityMatrix,5,50)
# Calculate the standardized richness of each plate at a quota of 0.5.
StandardizedRichness<-apply(CommunityCull,1,subsampleEvenness,0.5)
head(CommunityMatrix)
nrow(CommunityMatrix)
rownames(CommunityMatrix)
apply(CommunityMatrix,1,sum)
# Download a test dataset of pleistocene bivalves.
DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Pleistocene",StopInterval="Pleistocene")
# Create a community matrix of genera by plates.
CommunityMatrix<-abundanceMatrix(DataPBDB,Rows="geoplate",Columns="genus")
# Cull out depauperate samples and rare taxa
CommunityCull<-cullMatrix(CommunityMatrix,2,50)
# Calculate the standardized richness of each plate at a quota of 0.5.
StandardizedRichness<-apply(CommunityCull,1,subsampleEvenness,0.5)
# Download a test dataset of pleistocene bivalves.
DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Pliocene",StopInterval="Pleistocene")
# Create a community matrix of genera by plates.
CommunityMatrix<-abundanceMatrix(DataPBDB,Rows="geoplate",Columns="genus")
# Cull out depauperate samples and rare taxa
CommunityCull<-cullMatrix(CommunityMatrix,2,50)
# Calculate the standardized richness of each plate at a quota of 0.5.
StandardizedRichness<-apply(CommunityCull,1,subsampleEvenness,0.5)
# Download a test dataset of pleistocene bivalves.
DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Pliocene",StopInterval="Pleistocene")
# Create a community matrix of genera by plates.
CommunityMatrix<-abundanceMatrix(DataPBDB,Rows="geoplate",Columns="genus")
# Cull out depauperate samples and rare taxa
CommunityCull<-cullMatrix(CommunityMatrix,2,50)
# Calculate the standardized richness of each plate at a quota of 0.5.
StandardizedRichness<-apply(CommunityCull,1,subsampleEvenness,0.4)
# Download a test dataset of pleistocene bivalves.
DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Pliocene",StopInterval="Pleistocene")
# Create a community matrix of genera by plates.
CommunityMatrix<-abundanceMatrix(DataPBDB,Rows="geoplate",Columns="genus")
# Cull out depauperate samples and rare taxa
CommunityCull<-cullMatrix(CommunityMatrix,2,50)
# Calculate the standardized richness of each plate at a quota of 0.5.
StandardizedRichness<-apply(CommunityCull,1,subsampleEvenness,0.4,IgnoreSingletons=TRUE)
# Download a test dataset of pleistocene bivalves.
DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Pliocene",StopInterval="Pleistocene")
# Create a community matrix of genera by plates.
CommunityMatrix<-abundanceMatrix(DataPBDB,Rows="geoplate",Columns="genus")
# Cull out depauperate samples and rare taxa
CommunityCull<-cullMatrix(CommunityMatrix,2,50)
# Calculate the standardized richness of each plate at a quota of 0.5.
StandardizedRichness<-apply(CommunityCull,1,subsampleEvenness,0.4,ExcludeDominant=TRUE)
# Download a test dataset of pleistocene bivalves.
DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Miocene",StopInterval="Pleistocene")
# Create a community matrix of genera by plates.
CommunityMatrix<-abundanceMatrix(DataPBDB,Rows="geoplate",Columns="genus")
# Cull out depauperate samples and rare taxa
CommunityCull<-cullMatrix(CommunityMatrix,2,50)
# Calculate the standardized richness of each plate at a quota of 0.5.
StandardizedRichness<-apply(CommunityCull,1,subsampleEvenness,0.5)
head(CommunityCull)
dim(CommunityCull)
# Download a test dataset of pleistocene bivalves.
DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Miocene",StopInterval="Pleistocene")
#'	# Download a test dataset of pleistocene bivalves.
#'	DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Miocene",StopInterval="Pleistocene")
#'
#'  # Clean up the taxonomy by removing subgenus designation
#'  DataPBDB<-cleanTaxonomy(DataPBDB,"genus")
#'
#'	# Create a community matrix of genera by plates.
#'	CommunityMatrix<-abundanceMatrix(DataPBDB,Rows="geoplate",Columns="genus")
#'
#'	# Cull out depauperate samples and rare taxa
#'	CommunityCull<-cullMatrix(CommunityMatrix,5,100)
#'
#'	# Calculate the standardized richness of each plate at a quota of 0.5.
#'	StandardizedRichness<-apply(CommunityCull,1,subsampleEvenness,0.5)
document
document()
?subsampleEvenness
# Download a test dataset of pleistocene bivalves.
DataPBDB<-downloadPBDB(Taxa="Bivalvia",StartInterval="Miocene",StopInterval="Pleistocene")
# Clean up the taxonomy by removing subgenus designation
DataPBDB<-cleanTaxonomy(DataPBDB,"genus")
# Create a community matrix of genera by plates.
CommunityMatrix<-abundanceMatrix(DataPBDB,Rows="geoplate",Columns="genus")
# Cull out depauperate samples and rare taxa
CommunityCull<-cullMatrix(CommunityMatrix,5,100)
# Calculate the standardized richness of each plate at a quota of 0.5.
StandardizedRichness<-apply(CommunityCull,1,subsampleEvenness,0.5)
StandardizedRichness
library(veolociraptr)
Test<-downloadPaleogeography
Test<-downloadPaleogeography(0)
plot(Test)
Test
rgdal::plot(Test)
library(rgdal)
plot(Test)
uniformExtinction
adaptiveOrigination()
adaptiveOrigination
adaptiveExtinction
lambdaPositive
library(veolociraptr)
?uniformConfidence
?uniformConfidence
document()
?uniformExtinction
# Generate an exmaple dataset of fossil ages
FakeAges<-runif(50,100,50)
# Calculate the inferred age of extinction with 95% confidence.
uniformExtinction(FakeAges,Confidence=0.95)
# Calculate the inferred age of origination with 50% confidence.
uniformOrigination(FakeAges,Confidence=0.5)
runif
FakeAges<-runif(50,50,100)
# Generate an exmaple dataset of fossil ages
FakeAges<-runif(50,50,100)
# Calculate the inferred age of extinction with 95% confidence.
uniformExtinction(FakeAges,Confidence=0.95)
# Calculate the inferred age of origination with 50% confidence.
uniformOrigination(FakeAges,Confidence=0.5)
min(FakeAges)
runif(50,50,100)
uniformOrigination(FakeAges,Confidence=0.5)
library(veolociraptr)
?uniformExtinction
# Generate an exmaple dataset of fossil ages
FakeAges<-runif(50,50,100)
# Calculate the inferred age of extinction with 95% confidence.
uniformExtinction(FakeAges,Confidence=0.95)
# Calculate the inferred age of origination with 50% confidence.
uniformOrigination(FakeAges,Confidence=0.5)
library(veolociraptr)
document()
library(veolociraptr)
library(veolociraptr)
library(veolociraptr)
library(veolociraptr)
library(veolociraptr)
library(veolociraptr)
library(veolociraptr)
library(veolociraptr)
